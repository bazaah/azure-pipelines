parameters:
  rust: stable
  allow_fail: false
  cross: false
  envs: {}
  setup: []
  test_ignored: false
  single_threaded: false
  features: '' # empty feature list is == default
  raw_opts: ''



jobs:
- job: ${{ parameters.name }}
  ${{ if eq('true', parameters.test_ignored) }}:
    displayName: cargo +${{ parameters.rust }} test -- --ignored
  ${{ if ne('true', parameters.test_ignored) }}:
    displayName: cargo +${{ parameters.rust }} test
  continueOnError: ${{ parameters.allow_fail }}
  ${{ if eq('true', parameters.cross) }}:
    strategy:
      matrix:
        Linux:
          vmImage: ubuntu-16.04
        MacOS:
          vmImage: macOS-10.14
        Windows:
          vmImage: windows-2019
  ${{ if ne('true', parameters.cross) }}:
    variables:
      vmImage: ubuntu-16.04
  pool:
    vmImage: $(vmImage)
  steps:
  - template: _setup.yml
    parameters:
      rust: ${{ parameters.rust }}
      setup: ${{ parameters.setup }}
  - script: echo '##vso[task.setvariable variable=options] '
  # Cargo options go here
  - script: echo '##vso[task.setvariable variable=options]$(options) --all'
  - ${{ if eq(true, parameters.features)}}:
    - script: echo '##vso[task.setvariable variable=options]$(options) --features "${{ parameters.features }}"'
  # Add any additional conditional cargo options to this check
  - ${{ if or(eq(true, parameters.single_threaded), eq(true, parameters.test_ignored))}}:
    - script: echo '##vso[task.setvariable variable=options]$(options) --'
  # Options passed to libtest go here
  - ${{ if eq(true, parameters.single_threaded) }}:
    - script: echo '##vso[task.setvariable variable=options]$(options) --test_threads=1'
  - ${{ if eq(true, parameters.test_ignored)}}:
    - script: echo '##vso[task.setvariable variable=options]$(options) --ignored'
  # Run tests with the given options
  - ${{ if eq(true, parameters.raw_opts) }}:
    - script: cargo test ${{ parameters.raw_opts }}
      displayName: Run tests (with... ${{ parameters.raw_opts }})
      env:
        ${{ insert }}: ${{ parameters.envs }}
  - ${{ if ne(true, parameters.raw_opts) }}:
    - script: cargo test $(options)
      displayName: Run tests
      env:
        ${{ insert }}: ${{ parameters.envs }}

